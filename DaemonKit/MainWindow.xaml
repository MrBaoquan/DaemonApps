<reactiveui:ReactiveWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DaemonKit"
        xmlns:core="clr-namespace:DaemonKit.Core"
        xmlns:System="clr-namespace:System;assembly=System.Runtime" 
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:reactiveui="http://reactiveui.net"
        x:Class="DaemonKit.MainWindow"
        x:TypeArguments="local:MainViewModel"
        mc:Ignorable="d"
        Title="软件运维中心" Height="500" Width="1000" ResizeMode="CanResizeWithGrip" MinWidth="800" MinHeight="450"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
    >


    <Window.Resources>
        <local:MainViewModel x:Key="MainVM" />
    </Window.Resources>

    <Grid ShowGridLines="False">
        <DockPanel>
            <Menu x:Name="MainMenu" DockPanel.Dock="Top" IsMainMenu="True" BorderBrush="LightGray" >
                <MenuItem Header="_文件">
                    <MenuItem Header="_打开" InputGestureText="Ctrl+D"  Icon="{materialDesign:PackIcon Kind=OpenInNew}">
                        <MenuItem Header="进程目录" InputGestureText="Ctrl+1"  Icon="{materialDesign:PackIcon Kind=FolderOpenOutline}" Command="{Binding RunProcess}" CommandParameter="{Binding OpenAppRoot_args}"/>
                        <MenuItem Header="资源管理器" InputGestureText="Ctrl+2"  Icon="{materialDesign:PackIcon Kind=FolderSearchOutline}" Command="{Binding RunProcess}" CommandParameter="{Binding OpenFileExplorer_args}"/>
                        <MenuItem Header="命令行(CMD)" InputGestureText="Ctrl+T" Icon="{materialDesign:PackIcon Kind=ApplicationBracketsOutline}"  Command="{Binding RunProcess}" CommandParameter="{Binding OpenCMD_args}"/>
                        <MenuItem Header="命令行(PowerShell)" InputGestureText="Ctrl+P" Icon="{materialDesign:PackIcon Kind=ApplicationBracketsOutline}" Command="{Binding RunProcess}" CommandParameter="{Binding OpenPowerShell_args}" />
                    </MenuItem>
                    <Separator/>
                    <MenuItem Icon="{materialDesign:PackIcon Kind=Settings}" Header="设置" Command="{Binding OpenSettings}"/>
                </MenuItem>
                <MenuItem Header="_帮助">
                    <MenuItem Header="版本更新" Icon="{materialDesign:PackIcon Kind=Update}" Command="{Binding RunProcess}" CommandParameter="{Binding OpenUpdatePage_args}" />
                    <MenuItem Header="关于DaemonKit" Icon="{materialDesign:PackIcon Kind=Help}" />
                </MenuItem>
            </Menu>
            <StatusBar x:Name="statusbar" DockPanel.Dock="Bottom" Height="20" VerticalAlignment="Bottom">
                
            </StatusBar>
            <Grid ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="45*"/>
                    <ColumnDefinition Width="55*"/>
                </Grid.ColumnDefinitions>
                <materialDesign:ColorZone BorderBrush="LightGray" BorderThickness=" 0 1 0 0" 
                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                                          VerticalContentAlignment="Stretch" Padding="15">
                    <!--<TextBox x:Name="textbox" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="204" />-->
                    <TreeView x:Name="ProcessTree" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" DataContext="{Binding}">
                        <TreeView.Resources>
                            <ContextMenu x:Key="RootMenu">
                                <MenuItem Header="添加子节点" 
Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.AddTreeNode}"
                                          />
                            </ContextMenu>
                            <ContextMenu x:Key="ChildMenu">
                                <MenuItem Header="打开所在文件夹" 
Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.ShowInExplorer}"
                                          />
                                <MenuItem Header="编辑结点信息"
Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.EditTreeNode}" 
                                          />
                                <Separator/>
                                <MenuItem Header="节点操作">
                                    <MenuItem Header="添加子节点" 
Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.AddTreeNode}"
                                              />
                                    <MenuItem Header="删除该节点" 
Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.DeleteTreeNode}"
                                              />
                                </MenuItem>
                            </ContextMenu>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                <Setter Property="IsExpanded" Value="True"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Margin" Value="0 10 0 0"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSuperRoot}" Value="True">
                                        <Setter Property="ContextMenu" Value="{StaticResource RootMenu}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSuperRoot}" Value="False">
                                        <Setter Property="ContextMenu" Value="{StaticResource ChildMenu}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type core:ProcessItem}" ItemsSource="{Binding Childs}">
                                <Grid Height="20">

                                    <TextBlock VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Text="{Binding Name}"  />

                                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                        <ToggleButton
                                            
                                            Height="15"
                                            Margin="0 0 20 0"
                                            Cursor="Hand"
  Style="{StaticResource MaterialDesignSwitchLightToggleButton}"
  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.ToggleEnable}" 
                                            CommandParameter="{Binding RelativeSource={RelativeSource Self},Path=DataContext}"
  ToolTip="[启用|忽略]该进程"
  IsChecked="{Binding Enable}" />
                                        <Button Width="20" Height="20" 
                                                Command="{Binding RunNodeCommand}"  ToolTip="启动该进程"
                                                Style="{DynamicResource MaterialDesignIconButton}" 
                                                Visibility="{Binding BtnRunVisibility}">
                                            <fa:ImageAwesome Icon="Play" Width="12" Height="12" Foreground="ForestGreen"/>
                                        </Button>
                                        <Button Width="20" Height="20" Style="{StaticResource MaterialDesignIconButton}" IsEnabled="False" Visibility="{Binding BtnLoadingVisibility}">
                                            <fa:ImageAwesome Icon="Spinner" Width="15" Height="15" Spin="True" SpinDuration="1" />
                                        </Button>
                                        <Button Width="20" Height="20" 
                                                ToolTip="结束该进程"
                                                Command="{Binding KillNodeCommand}" 
                                                Style="{StaticResource MaterialDesignIconButton}" IsEnabled="True" Visibility="{Binding BtnStopVisibility}">
                                            <fa:ImageAwesome Icon="Stop" Width="12" Height="12" Foreground="Red"/>
                                        </Button>
                                    </StackPanel>

                                </Grid>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <materialDesign:TreeViewAssist.AdditionalTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSuperRoot}" Value="False">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal" Margin="8 2 0 2">
                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" VerticalAlignment="Bottom" Text="进程名:"  />
                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" VerticalAlignment="Bottom" Text="{Binding Path}" />

                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" Padding="8 0 0 0" VerticalAlignment="Bottom" Text="延时:"  />
                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" VerticalAlignment="Bottom" Text="{Binding Delay}" />
                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" VerticalAlignment="Bottom" Text="ms" />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                            
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSuperRoot}" Value="True">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal" Margin="8 2 0 2">
                                                                    <TextBlock Style="{StaticResource MaterialDesignOverlineTextBlock}" VerticalAlignment="Bottom" Text=""  />
                                                                </StackPanel>
                                                            </DataTemplate>

                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                            
                        </materialDesign:TreeViewAssist.AdditionalTemplate>
                    </TreeView>

                </materialDesign:ColorZone>
                
                <Grid Grid.Column="1" ShowGridLines="False" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60*" />
                        <RowDefinition Height="40*" />
                    </Grid.RowDefinitions>

                    <TextBox
                        x:Name="hardwareInfoBox"
                        Grid.Row="0"
                        Grid.Column="0"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        VerticalAlignment="Stretch"
                        Text=""
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto"
                        materialDesign:HintAssist.Hint="计算机配置信息"
                        Margin="0 0 0 0"
                        Opacity="0.8"
                        BorderBrush="LightGray"
                        IsReadOnly="True"
                        IsEnabled="True" Cursor="IBeam" IsUndoEnabled="False" />

                    <TextBox
                        x:Name="logBox"
                        Grid.Row="1"
                        Grid.Column="0"
                        BorderBrush="LightGray"
                        Opacity="0.8"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        VerticalAlignment="Stretch"
                        Text=""
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto"
                        materialDesign:HintAssist.Hint="实时日志"
                        IsReadOnly="True"
                        IsEnabled="True" Cursor="IBeam" IsUndoEnabled="False"/>
                </Grid>
               

            </Grid>
        </DockPanel>
    </Grid>
</reactiveui:ReactiveWindow>
